execute pathogen#infect()
syntax on
filetype plugin indent on

let g:rustfmt_autosave = 1

let mapleader=","

nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

set hidden
let g:racer_cmd = "/home/mrcastel/.cargo/bin/racer"
let g:racer_experimental_completer = 1

au FileType rust nmap gd <Plug>(rust-def)
"au FileType rust nmap gs <Plug>(rust-def-split)
au FileType rust nmap gs <Plug>(rust-def-vertical)
au FileType rust nmap gx <Plug>(rust-def-vertical)
au FileType rust nmap gc <Plug>(rust-doc)

autocmd BufRead *.rs :setlocal tags=./rusty-tags.vi;/
autocmd BufWritePost *.rs :silent! exec "!rusty-tags vi --quiet --start-dir=" . expand('%:p:h') . "&" | redraw!

nmap <F8> :TagbarToggle<CR>
let g:tagbar_type_rust = {
    \ 'ctagstype' : 'rust',
    \ 'kinds' : [
        \'T:types,type definitions',
        \'f:functions,function definitions',
        \'g:enum,enumeration names',
        \'s:structure names',
        \'m:modules,module names',
        \'c:consts,static constants',
        \'t:traits',
        \'i:impls,trait implementations',
    \]
    \}

let g:neocomplete#enable_at_startup = 1

" FZF stuff
set rtp+=~/.fzf
command! -bang -nargs=* GGrep
  \ call fzf#vim#grep(
  \   'git grep --line-number --color=always '.shellescape(<q-args>), 0,
  \   { 'dir': systemlist('git rev-parse --show-toplevel')[0] }, <bang>0)

" Shortcuts
nmap <Leader>fb :Buffers<CR>
nmap <Leader>fc :Commits<CR>
nmap <Leader>ff :Files<CR>
nmap <Leader>fg :GFiles<CR>
nmap <Leader>fh :History<CR>
nmap <Leader>fl :Lines<CR>
" git grep word under the cursor
nmap <Leader>fr :GGrep <C-R><C-W><CR>
